<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cadastrar Aluno</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; background-color: #f0f4f8; color: #333; }
        .container { background: #fff; padding: 30px; border-radius: 12px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); max-width: 500px; margin: 50px auto; }
        h1 { text-align: center; color: #007bff; margin-bottom: 25px; }
        label { display: block; margin-bottom: 5px; font-weight: bold; color: #555; }
        input[type="text"], input[type="email"], select { width: 100%; padding: 12px; margin-bottom: 15px; border: 1px solid #ccc; border-radius: 6px; box-sizing: border-box; }
        button { background-color: #28a745; color: white; padding: 14px 20px; border: none; border-radius: 6px; cursor: pointer; width: 100%; font-size: 16px; transition: background-color 0.3s; }
        button:hover { background-color: #218838; }
        .message { margin-top: 20px; padding: 15px; border-radius: 6px; font-weight: bold; }
        .success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .error { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        /* Adicionado para auxiliar na navegação */
        .nav-link { display: block; text-align: center; margin-top: 15px; color: #007bff; text-decoration: none; }
        .nav-link:hover { text-decoration: underline; }
    </style>
</head>
<body>

    <div class="container">
        <h1>Novo Aluno</h1>

        <% if (message) { %>
            <div class="message <%= isSuccess ? 'success' : 'error' %>">
                <%= message %>
            </div>
        <% } %>

        <form id="studentForm">
            <label for="name">Nome Completo</label>
            <input type="text" id="name" name="name" placeholder="Ex: João da Silva" required>

            <label for="email">E-mail</label>
            <input type="email" id="email" name="email" placeholder="Ex: joao.silva@aluno.com" required>

            <label for="rgm">RGM (Máx. 15 caracteres)</label>
            <input type="text" id="rgm" name="rgm" maxlength="15" placeholder="Ex: 12345678" required>

            <label for="current_semester">Semestre Atual</label>
            <select id="current_semester" name="current_semester" required>
                <option value="" disabled selected>Selecione o Semestre</option>
                <option value="7 Semestre">7 Semestre</option>
                <option value="8 Semestre">8 Semestre</option>
                <option value="7/8 Semestre">7/8 Semestre</option>
            </select>

            <button type="submit">Cadastrar Aluno</button>
        </form>
        <a href="/admin/students" class="nav-link">Ir para Gerenciamento de Alunos</a>
        <div id="runtimeMessage" class="message" style="display: none;"></div>
    </div>

    <script>
        const API_BASE_URL = window.location.origin;
        const userToken = localStorage.getItem('userToken');
        const messageElement = document.getElementById('runtimeMessage');

        if (!userToken) {
            messageElement.style.display = 'block';
            messageElement.className = 'error';
            messageElement.innerHTML = '<strong>Erro de Autenticação:</strong> Você precisa estar logado para cadastrar um aluno. Redirecionando para o login...';
            setTimeout(() => { window.location.href = '/login'; }, 3000);
        }

        function showMessage(type, content) {
            messageElement.style.display = 'block';
            messageElement.className = type === 'success' ? 'success' : 'error';
            messageElement.innerHTML = content;
        }

        document.getElementById('studentForm').addEventListener('submit', async function(event) {
            event.preventDefault();
            
            if (!userToken) {
                showMessage('error', 'Token de usuário não encontrado. Faça o login novamente.');
                return;
            }

            const name = document.getElementById('name').value;
            const email = document.getElementById('email').value;
            const rgm = document.getElementById('rgm').value;
            const current_semester = document.getElementById('current_semester').value;

            const studentData = { name, email, rgm, current_semester };

            try {
                const response = await fetch(`${API_BASE_URL}/students`, {
                    method: 'POST',
                    headers: { 
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${userToken}` 
                    },
                    body: JSON.stringify(studentData)
                });

                const data = await response.json();
                
                if (response.ok || response.status === 201) {
                    showMessage('success', `Aluno ${data.name} (RGM: ${data.rgm}) cadastrado com sucesso!`);
                    document.getElementById('studentForm').reset(); // Limpa o formulário
                } else {
                    showMessage('error', `Erro ao cadastrar (Status ${response.status}): ${data.message || 'Erro desconhecido.'}`);
                    console.error('Erro de Cadastro:', data);
                }

            } catch (error) {
                showMessage('error', `Erro de conexão: ${error.message}. Verifique o console.`);
                console.error('Erro de Rede:', error);
            }
        });
    </script>
</body>
</html>
